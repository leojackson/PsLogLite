name: Continuous Integration

on:
  push:
    branches: 
      - master
      - release/**
    paths:
      - 'PsLogLite/**.ps1'
      - 'PsLogLite/**.psm1'
      - 'PsLogLite/**.psd1'
      - 'Tests/**.Tests.ps1'
      - 'codecov.yml'
      - '.github/workflows/ci.yml'
  pull_request:
    branches: [ master ]
    paths:
      - 'PsLogLite/**.ps1'
      - 'PsLogLite/**.psm1'
      - 'PsLogLite/**.psd1'
      - 'Tests/**.Tests.ps1'

jobs:
  Pester:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest,ubuntu-latest,macos-latest]
      fail-fast: false
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    - name: Run all Pester tests in PowerShell Core
      env:
        PROJECT_NAME: ${{ github.event.repository.name }}
      run: |
        Try { Import-Module Pester -MinimumVersion 5.0.3 -ErrorAction Stop }
        Catch {
          Set-PSRepository -Name PSGallery -InstallationPolicy Trusted
          Install-Module Pester -MinimumVersion 5.0.3 -Force -SkipPublisherCheck
          Import-Module Pester -MinimumVersion 5.0.3
        }
        $Config = [PesterConfiguration]$(Get-Content -Path ".\.github\workflows\pester.json" -Raw | ConvertFrom-Json)
        $Config.TestResult.Enabled = $True
        Import-Module .\$ENV:PROJECT_NAME
        Invoke-Pester -Configuration $Config
      shell: pwsh
    - name: Run all Pester tests in Windows PowerShell
      if: ${{ runner.os == 'Windows' }}
      env:
        PROJECT_NAME: ${{ github.event.repository.name }}
      run: |
        Try { Import-Module Pester -MinimumVersion 5.0.3 -ErrorAction Stop }
        Catch {
          Set-PSRepository -Name PSGallery -InstallationPolicy Trusted
          Install-Module Pester -MinimumVersion 5.0.3 -Force -SkipPublisherCheck
          Import-Module Pester -MinimumVersion 5.0.3
        }
        $Config = [PesterConfiguration]$(Get-Content -Path ".\.github\workflows\pester.json" -Raw | ConvertFrom-Json)
        $Config.CodeCoverage.Enabled = $True
        $Config.CodeCoverage.Path = Get-ChildItem -Path .\$ENV:PROJECT_NAME -Recurse -File -Include '*.ps1' -Exclude '*.Tests.ps1' -ErrorAction SilentlyContinue
        $Config.TestResult.Enabled = $True
        $Config.TestResult.OutputPath = ".\$ENV:PROJECT_NAME.testresult-wps.xml"
        Import-Module .\$ENV:PROJECT_NAME
        Invoke-Pester -Configuration $Config
      shell: powershell
    - name: Upload coverage to Codecov
      if: ${{ runner.os == 'Windows' && github.ref == 'refs/heads/master' }}
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      run: bash <(curl -s https://codecov.io/bash)
      shell: bash
    - name: Attach test result XML as artifact
      uses: actions/upload-artifact@v2
      with:
        name: testresult-${{ runner.os }}
        path: |
          ${{ github.event.repository.name }}.testresult.xml
    - name: Attach test result XML as artifact (WPS)
      if: ${{ runner.os == 'Windows' }}
      uses: actions/upload-artifact@v2
      with:
        name: testresult-${{ runner.os }}-WPS
        path: |
          ${{ github.event.repository.name }}.testresult-wps.xml
    - name: Attach coverage as artifact
      if: ${{ runner.os == 'Windows' }}
      uses: actions/upload-artifact@v2
      with:
        name: coverage
        path: |
          ${{ github.event.repository.name }}.coverage.xml
